set nocompatible              " 关闭兼容模式
filetype off

" 定义快捷键的前缀，即<Leader>
let mapleader = "\<Space>"

" 使用Vundle管理插件
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Vundle
Plugin 'gmarik/Vundle.vim'

"""""""""""""""""""""""""""""""""""""""""""""
"              个人配置插件                 "
"""""""""""""""""""""""""""""""""""""""""""""

" 文件管理
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
" go 插件
Plugin 'fatih/vim-go'
" 自动补全插件
Plugin 'Valloric/YouCompleteMe'

"""""""""""""""""""""""""""""""""""""""""""""
"              插件结束                     "
"""""""""""""""""""""""""""""""""""""""""""""

call vundle#end()            " 所有插件必须在此行以上添加

filetype plugin indent on    " required

" NERDTree 设置
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let g:NERDTreeGlyphReadOnly = "RO"
" 文件浏览
" 隐藏pyc文件
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
" NERDTree git 扩展
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }
" F3打开关闭nerdtree
map <F3> :NERDTreeToggle<CR>
imap <F3> <ESC> :NERDTreeToggle<CR>
" 当打开vim且没有文件时自动打开NERDTree
autocmd vimenter * if !argc() | NERDTree | endif
" 只剩 NERDTree时自动关闭
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" 配色配置
color molokai
let g:molokai_original = 1
let g:rehash256 = 1
set t_Co=256

" 基本配置
set nu
set encoding=utf-8
set autochdir " 需要自动改变vim的当前目录为打开的文件所在目录则设置此项
set ignorecase  " 忽略规则表达式的大小写
set hlsearch  " 搜索高亮
" 使用单个ctrl+w 替换ctrl+ww
map <C-w> <C-w>w

" 代码折叠
set foldmethod=indent
set foldlevel=99
nnoremap <space> za
let g:SimpylFold_docstring_preview=1

" 解决插入模式下delete/backspce键失效问题
set backspace=2

" 代码缩进
au BufNewFile,BufRead *
\ set tabstop=4 |
\ set softtabstop=4 |
\ set shiftwidth=4 |
\ set expandtab |
\ set autoindent |
\ set fileformat=unix |
\ set list listchars=tab:>-
au BufNewFile,BufRead *.go
\ set nolist

" Python支持Virtualenv
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
    project_base_dir = os.environ['VIRTUAL_ENV']
    activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
    execfile(activate_this, dict(__file__=activate_this))
EOF

" 语法检查/高亮
let python_highlight_all=1
syntax on

set cursorline  " 光标横线



" 新建.py,.sh文件，自动插入文件头
autocmd BufNewFile *.py,*sh exec ":call SetTitle()"
" 定义函数SetTitle，自动插入文件头
func SetTitle()
    "如果文件类型为.py文件
    if &filetype == 'python'
       call setline(1,"\#!/usr/bin/env python")
        call append(line("."), "\# -*- coding: utf-8 -*-")
        call append(line(".")+1,"")
        call append(line(".")+2, "\"\"\"")
        call append(line(".")+3, "".expand("%:r"))
        call append(line(".")+4, "~~~~~~~~~~~~")
        call append(line(".")+5, "")
        call append(line(".")+6, "please add description for this module")
        call append(line(".")+7, "")
        call append(line(".")+8, ":copyright: (c) 2016 zhangyue")
        call append(line(".")+9, ":authors: zengduju")
        call append(line(".")+10, ":version: 1.0 of ".strftime("%F"))
        call append(line(".")+11, "")
        call append(line(".")+12, "\"\"\"")
        call append(line(".")+13, "")
        call append(line(".")+14, "")
        call append(line(".")+15, "if __name__ == '__main__':")
        call append(line(".")+16, "    pass")
    elseif &filetype == 'sh'
        call setline(1, "\#!/usr/bin/env bash")
        call append(line("."), "")
        call append(line(".")+1, "\# ".expand("%:r"))
        call append(line(".")+2, "\# ~~~~~~~~~~~~")
        call append(line(".")+3, "")
        call append(line(".")+4, "\# :authors: zengduju")
        call append(line(".")+5, "\# :version: 1.0 of ".strftime("%F"))
        call append(line(".")+6, "\# :copyright: (c) 2016 zhangyue")
        call append(line(".")+7, "")
        call append(line(".")+8, "")
        call append(line(".")+9, "")
    endif
    "新建文件后，自动定位到文件末尾
    autocmd BufNewFile * normal G
endfunc
